# For more information: https://laravel.com/docs/sail
version: '3.5'
services:
    laravel:
        container_name: "shipsmart.webapp"
        build:
            context: .
            dockerfile: Dockerfile
        image: ship-smart:php8.0-apache-nodejs14
        ports:
            - '${APP_PORT}:80'
        volumes:
            - '.:/var/www/html'
        networks:
            ship-smart_network:
                ipv4_address: 172.64.0.4
        depends_on:
            - mysql
            - mongo
    mysql:
        container_name: "shipsmart.mysql"
        image: 'mysql:8.0'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        networks:
            ship-smart_network:
                ipv4_address: 172.64.0.3
        healthcheck:
            test: ["CMD", "mysqladmin", "ping"]
            retries: 3
            timeout: 5s
    mongo:
        container_name: "shipsmart.mongo"
        image: mongo
        restart: always
        environment:
            MONGO_NON_ROOT_USERNAME: ${DB_USERNAME}
            MONGO_NON_ROOT_PASSWORD: ${DB_PASSWORD}
            MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${DB_DATABASE}
        volumes:
            - ./mongo.init.sh:/docker-entrypoint-initdb.d/mongo.init.sh
        networks:
            ship-smart_network:
                ipv4_address: 172.64.0.2
networks:
    ship-smart_network:
       name: ship-smart_network
       ipam:
           driver: default
           config:
               - subnet: 172.64.0.0/28
